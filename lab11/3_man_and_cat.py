# -*- coding: utf-8 -*-

from random import randint

# Доработать практическую часть урока lesson_007/python_snippets/08_practice.py

# Необходимо создать класс кота. У кота есть аттрибуты - сытость и дом (в котором он живет).
# Кот живет с человеком в доме.
# Для кота дом характеризируется - миской для еды и грязью.
# Изначально в доме нет еды для кота и нет грязи.

# Доработать класс человека, добавив методы
#   подобрать кота - у кота появляется дом.
#   купить коту еды - кошачья еда в доме увеличивается на 50, деньги уменьшаются на 50.
#   убраться в доме - степень грязи в доме уменьшается на 100, сытость у человека уменьшается на 20.
# Увеличить кол-во зарабатываемых человеком денег до 150 (он выучил пайтон и устроился на хорошую работу :)

# Кот может есть, спать и драть обои - необходимо реализовать соответствующие методы.
# Когда кот спит - сытость уменьшается на 10
# Когда кот ест - сытость увеличивается на 20, кошачья еда в доме уменьшается на 10.
# Когда кот дерет обои - сытость уменьшается на 10, степень грязи в доме увеличивается на 5
# Если степень сытости < 0, кот умирает.
# Так же надо реализовать метод "действуй" для кота, в котором он принимает решение
# что будет делать сегодня

# Человеку и коту надо вместе прожить 365 дней.

# TODO здесь ваш код
class Человек:
    def __init__(self, имя):
        self.имя = имя
        self.деньги = 0
        self.сытость = 50
        self.дом = None

    def __str__(self):
        return self.имя

    def подобрать_кота(self, кот):
        кот.дом = self.дом

    def купить_еду_для_кота(self):
        if self.деньги >= 50:
            self.деньги -= 50
            self.дом.кошачья_еда += 50
            print(f"{self.имя} купил еду для кота.")
        else:
            print(f"{self.имя} не имеет достаточно денег, чтобы купить еду для кота.")

    def убраться_в_доме(self):
        self.дом.степень_грязи -= 100
        self.сытость -= 20
        print(f"{self.имя} убрался в доме.")

    def заработать_деньги(self):
        self.деньги += 150
        print(f"{self.имя} заработал 150 денег.")


class Кот:
    def __init__(self, имя):
        self.имя = имя
        self.сытость = 50
        self.дом = None

    def __str__(self):
        return self.имя

    def есть(self):
        if self.дом.кошачья_еда >= 10:
            self.сытость += 20
            self.дом.кошачья_еда -= 10
            print(f"{self.имя} поел.")
        else:
            print(f"{self.имя} не может поесть, так как нет еды.")

    def спать(self):
        self.сытость -= 10
        print(f"{self.имя} поспал.")

    def драть_обои(self):
        self.сытость -= 10
        self.дом.степень_грязи += 5
        print(f"{self.имя} дерет обои.")

    def действуй(self):
        if self.сытость <= 0:
            print(f"{self.имя} умер.")
            return

        if self.сытость < 20:
            self.есть()
        elif self.дом.степень_грязи > 100:
            self.драть_обои()
        else:
            self.спать()

class Дом:
    def __init__(self):
        self.кошачья_еда = 0
        self.степень_грязи = 0

человек = Человек("Женя")
кот = Кот("Басик")
дом = Дом()

человек.деньги = 200
человек.дом = дом
кот.дом = дом

for день in range(1, 366):
    print(f">>>>> День {день} <<<<<")
    человек.заработать_деньги()
    человек.подобрать_кота(кот)
    человек.купить_еду_для_кота()
    человек.убраться_в_доме()
    кот.действуй()
    print(f"Уровень грязи в доме: {дом.степень_грязи}")
    print(f"Кошачья еда в доме: {дом.кошачья_еда}")
    print(f"Сытость человека {человек}: {человек.сытость}")
    print(f"Сытость кота {кот}: {кот.сытость}")
    print("")

    if человек.сытость <= 0:
        print(f"{человек} умер от голода.")
        break

    if кот.сытость <= 0:
        print(f"{кот} умер от голода.")
        break




# Усложненное задание (делать по желанию)
# Создать несколько (2-3) котов и подселить их в дом к человеку.
# Им всем вместе так же надо прожить 365 дней.

# (Можно определить критическое количество котов, которое может прокормить человек...)
